<UserControl x:Class="IoTDeviceWpfApp.Views.HomeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <!-- Set minimum size for the window -->
    <UserControl.MinWidth>400</UserControl.MinWidth>
    <UserControl.MinHeight>400</UserControl.MinHeight>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition MinHeight="200"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Fan Canvas with a flat look -->
        <Canvas Grid.Row ="0" Grid.Column="0" Margin="10" Name="fanCanvas" Width="200" Height="200" HorizontalAlignment="Center" VerticalAlignment="Center">
            <!-- Fan Base -->
            <Ellipse Width="80" Height="80" Stroke="Gray" StrokeThickness="2" Fill="LightGray" Canvas.Left="60" Canvas.Top="60"/>

            <!-- Fan Hub -->
            <Ellipse Width="30" Height="30" Fill="DarkGray" Canvas.Left="85" Canvas.Top="85"/>

            <!-- Fan Blades (flat, no shadows) -->
            <Path Data="M 0,0 L 10,-50 Q 15,-70 0,-80 Q -15,-70 -10,-50 Z"
                  Fill="LightBlue" Canvas.Left="100" Canvas.Top="100">
                <Path.RenderTransform>
                    <RotateTransform Angle="{Binding Blade1Angle}" CenterX="0" CenterY="0"/>
                </Path.RenderTransform>
            </Path>

            <Path Data="M 0,0 L 10,-50 Q 15,-70 0,-80 Q -15,-70 -10,-50 Z"
                  Fill="LightBlue" Canvas.Left="100" Canvas.Top="100">
                <Path.RenderTransform>
                    <RotateTransform Angle="{Binding Blade2Angle}" CenterX="0" CenterY="0"/>
                </Path.RenderTransform>
            </Path>

            <Path Data="M 0,0 L 10,-50 Q 15,-70 0,-80 Q -15,-70 -10,-50 Z"
                  Fill="LightBlue" Canvas.Left="100" Canvas.Top="100">
                <Path.RenderTransform>
                    <RotateTransform Angle="{Binding Blade3Angle}" CenterX="0" CenterY="0"/>
                </Path.RenderTransform>
            </Path>

        </Canvas>

        <!-- Device Info Panel with flat styling -->
        <StackPanel Margin="10" Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Background="#2D2D2D">
            <Label Content="Device Status" FontSize="18" Foreground="White"></Label>
            <TextBlock Text="Device ID:" Foreground="White" FontFamily="Segoe UI" />
            <TextBlock Text="{Binding DeviceId}" Foreground="White" FontFamily="Segoe UI"/>
            <TextBlock Text="Status:" Foreground="White"></TextBlock>
            <TextBlock Text="{Binding DeviceStatus}" Foreground="white"/>
            <TextBlock Text="Last heartbeat:" Foreground="White"></TextBlock>
            <TextBlock Text="{Binding DeviceLastSeenText}" Foreground="white"/>
            <TextBlock Text="Heartbeat update interval (seconds):" Foreground="White"></TextBlock>
            <TextBlock Text="{Binding HeartbeatUpdateIntervalSeconds}" Foreground="white"/>
            <TextBlock Text="Last telemetry sent:" Foreground="White"></TextBlock>
            <TextBlock Text="{Binding LastTelemetrySentText}" Foreground="white"/>
        </StackPanel>

        <!-- Control Buttons Panel (flat buttons matching main window) -->
        <StackPanel Margin="10" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="1" Orientation="Horizontal" HorizontalAlignment="Center">
            <Button Content="On"
            Width="100"
                    MaxHeight="25"
            Command="{Binding Path=ToggleFanOnCommand}"
            IsEnabled="{Binding Path=IsFanOn, Converter={StaticResource InverseBooleanConverter}}"
            BorderThickness="0">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="#2D2D2D"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Style.Triggers>
                            <!-- Change background to green when fan is off -->
                            <DataTrigger Binding="{Binding Path=IsFanOn}" Value="False">
                                <Setter Property="Background" Value="#4CAF50" />
                                <!-- Green when off -->
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Button Content="Off"
            Width="100"
            MaxHeight="25"
            Command="{Binding Path=ToggleFanOffCommand}"
            IsEnabled="{Binding Path=IsFanOn}"
            BorderThickness="0"
            Margin="10,0,0,0">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="#2D2D2D"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Style.Triggers>
                            <!-- Change background to red when fan is on -->
                            <DataTrigger Binding="{Binding Path=IsFanOn}" Value="True">
                                <Setter Property="Background" Value="#FF5722" />
                                <!-- Red when on -->
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </StackPanel>

    </Grid>
</UserControl>
